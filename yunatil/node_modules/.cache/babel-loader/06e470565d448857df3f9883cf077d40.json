{"ast":null,"code":"export default [{\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"SESSION\",\n  code: \"<pre>$memNo = \\\\Session::get('member.memNo');</pre>\",\n  content: \"로그인한 회원 정보는 SESSION에 있다. 로그인한 회원 정보를 사용할 때는 session에서 가져다 쓰자.\",\n  regDt: \"2022.04.05\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"로그로 데이터 확인\",\n  code: \"<pre>$dbkLog = \\\\App::load('\\\\Component\\\\Dbk\\\\DbkLog');\\n$logData = [];;\\n$logData['arrData'] = $arrData;;\\n//DbkLog 테이블에 내용이 insert된다.;\\n$dbkLog->setInsertLog('setInsertLike',$logData);;\\nunset($dbkLog, $logData);</pre>\",\n  content: \"DbkLog Component  파일의 setInsertLog함수에서 log값을 db에 저장한다.\",\n  regDt: \"2022.04.05\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"trigger()\",\n  code: \"<pre>$('#testspan').trigger('click');\\n$('.order-buy').trigger('click');</pre>\",\n  content: \"이벤트 실행 없이 무조건 실행되게 함.(이벤트 핸들러 없이도 실행되게)\",\n  regDt: \"2022.04.06\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"get: url로 넘긴 데이터 가져오기\",\n  code: \"<pre>$bdId = Request::get()->get('bdId'); \\n if($bdId === 'recipe') {...}</pre>\",\n  content: \"해당 url에서만 동작하도록 함. 다른 페이지에서 이 컨트롤러를 자주 사용하게 될 경우 if문은 사용해 bdId 별로 구분해서 동작하게 할 수 있음\",\n  regDt: \"2022.04.06\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"고도몰 공통 코드\",\n  code: \"<pre>gd_select_box('areaNm', 'areaNm', gd_array_change_key_value(gd_code('90001')), \\n null, $dbkMainFilter['areaNm'], '선택해주세요');</pre>\",\n  content: \"텍스트로 selectbox 만들기, 코드 관리는 es_code애서 관리함\",\n  regDt: \"2022.04.07\"\n}, {\n  type: \"work\",\n  key: \"고도몰\",\n  title: \"타임세일\",\n  code: \"<pre>'SELECT sno FROM es_timeSale WHERE delFl = 'n' AND dbkMainFl = 'y' \\nAND startDt <= now() AND endDt >= now() ORDER BY sno DESC LIMIT 0,1'</pre>\",\n  content: \"타임세일 기획전 중, 메인으로 지정된 것이면서 진행 중이고, 그 중 가장 최신인 게시글을 결과로 도출한다. sql로 조건을 걸어 해결 가능했다.\",\n  regDt: \"2022.04.08\"\n}, {\n  type: \"error\",\n  key: \"고도몰\",\n  title: \"선물하기\",\n  code: \"<pre></pre>\",\n  content: \"order.html파일의 내용과 같은데 order_gift.html파일에서는 배송지 목록 추가 기능이 동작하지 않는 오류가 있었다. body태그 바로 안쪽에 있는 태그들 중 id='popupShipping'인 태그가 order_gift에서 실행할 때 포함되지 않고 있는 것을 발견했다. outline/header/_header.html 파일에서 body태그를 발견했고 order조건만 있는 것을 발견하고 order_gift일 때의 조건도 추가했다.\",\n  regDt: \"2022.04.08\"\n}, {\n  type: \"error\",\n  key: \"고도몰\",\n  title: \"전화번호 검색 필터\",\n  code: \"<pre>if ($this->search['key'] && $this->search['keyword']) {\\n\tif($this->search['key'] == 'areaNm' || $this->search['key'] == 'shopNm') {\\n\t\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n\t}\\n    }\\nif ($this->search['key'] == 'contact'){\\n\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n}\\n</pre>\",\n  content: \"이슈: 전화번호로 0을 검색했을 때 모든 연락처 리스트가 나오는 결과가 있었다. $this->search['keyword']의 값이 0인 경우 해당 if문 안에 들어가지 않았다. 0을 false로 인식했기 때문이다. 그래서 contact부분만 if문 밖으로 따로 빼주었다.\",\n  regDt: \"2022.04.13\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"Controller에서 페이지 redirect\",\n  code: \"<pre>$this->redirect('/goods/goods_view.php?goodsNo=' . Request::get()->get('goodsNo'));</pre>\",\n  content: \"\",\n  regDt: \"2022.04.14\"\n}, {\n  type: \"tip\",\n  key: \"고도몰\",\n  title: \"CommonController\",\n  code: \"<pre>if ($this->search['key'] && $this->search['keyword']) {\\n\tif($this->search['key'] == 'areaNm' || $this->search['key'] == 'shopNm') {\\n\t\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n\t}\\n    }\\nif ($this->search['key'] == 'contact'){\\n\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n}\\n</pre>\",\n  content: \"전제 페이지에서 사용할 수 있는 Controller\\nstand.html은 컨트롤러가 없음 그래서 CommonController를 사용해서 데이터를 가져와서 써야함\",\n  regDt: \"2022.04.14\"\n}, {\n  type: \"dev\",\n  key: \"파이썬\",\n  title: \"MemoCode 코딩 메뉴 추가\",\n  code: \"<pre>#한줄씩 문장을 읽어들여 '\\\\n'문자로 연결하기\\ndef delEnter():\\n    texts = str(text.get(1.0, END))\\n    tList = texts.split('\\\\n')\\n    vText = ''\\n    for t in tList:\\n        if t == '':\\n            break;\\n        vText += t+'\\\\\\\\n'\\n    text.delete(1.0, END)\\n    text.insert(INSERT, vText)\\n    \\n#'\\\\'를 '\\\\\\\\'로 변환\\ndef delWord():\\n    texts = str(text.get(1.0, END))\\n    texts = texts.replace('\\\\\\\\','\\\\\\\\\\\\\\\\')\\n    text.delete(1.0, END)\\n    text.insert(INSERT, texts)\\n</pre>\",\n  content: \"<pre></pre>태그 사이에 줄바꿈이 있는 긴 코드를 넣어야할 때 일일이 엔터를 '\\\\n'문자로 수정하고 '\\\\'문자를 '\\\\\\\\'로 수정하는 것은 번거롭고 비효율적이었다. 그래서 이전에 과제로 만들었던 파이썬 메모장에 다음의 기능을 추가해 해결했다. <br/>> 1. 엔터키를 '\\\\n'문자로 변환&nbsp;2.'\\\\'문자를'\\\\\\\\'문자로 변환 &nbsp; 프로그래밍 언어를 아니까 필요할 때 프로그램을 직접 만들어서 사용할 수 있다는 게 좋은 것 같다.\",\n  regDt: \"2022.04.16\"\n}];","map":{"version":3,"sources":["E:/프로젝트/tilyuna.github.io/yunatil/src/assets/data/board.js"],"names":["type","key","title","code","content","regDt"],"mappings":"AAAA,eAAe,CAAC;AACZA,EAAAA,IAAI,EAAE,KADM;AAEZC,EAAAA,GAAG,EAAC,KAFQ;AAGZC,EAAAA,KAAK,EAAE,SAHK;AAIZC,EAAAA,IAAI,EAAE,qDAJM;AAKZC,EAAAA,OAAO,EAAE,+DALG;AAMZC,EAAAA,KAAK,EAAE;AANK,CAAD,EAQf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,YAHX;AAIIC,EAAAA,IAAI,EAAE,8NAJV;AAKIC,EAAAA,OAAO,EAAE,wDALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CARe,EAgBf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,WAHX;AAIIC,EAAAA,IAAI,EAAE,gFAJV;AAKIC,EAAAA,OAAO,EAAE,yCALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAhBe,EAwBf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,uBAHX;AAIIC,EAAAA,IAAI,EAAE,iFAJV;AAKIC,EAAAA,OAAO,EAAE,oFALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAxBe,EAgCf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,WAHX;AAIIC,EAAAA,IAAI,EAAE,yIAJV;AAKIC,EAAAA,OAAO,EAAE,0CALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAhCe,EAwCf;AACIL,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,MAHX;AAIIC,EAAAA,IAAI,EAAE,sJAJV;AAKIC,EAAAA,OAAO,EAAE,kFALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAxCe,EAgDf;AACIL,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,MAHX;AAIIC,EAAAA,IAAI,EAAE,aAJV;AAKIC,EAAAA,OAAO,EAAE,4PALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAhDe,EAwDf;AACIL,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,YAHX;AAIIC,EAAAA,IAAI,EAAE,shBAJV;AAKIC,EAAAA,OAAO,EAAE,0JALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAxDe,EAgEf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,2BAHX;AAIIC,EAAAA,IAAI,EAAE,gGAJV;AAKIC,EAAAA,OAAO,EAAE,EALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAhEe,EAwEf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,kBAHX;AAIIC,EAAAA,IAAI,EAAE,shBAJV;AAKIC,EAAAA,OAAO,EAAE,6FALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAxEe,EAgFf;AACIL,EAAAA,IAAI,EAAE,KADV;AAEIC,EAAAA,GAAG,EAAC,KAFR;AAGIC,EAAAA,KAAK,EAAE,mBAHX;AAIIC,EAAAA,IAAI,EAAE,4dAJV;AAKIC,EAAAA,OAAO,EAAE,oQALb;AAMIC,EAAAA,KAAK,EAAE;AANX,CAhFe,CAAf","sourcesContent":["export default [{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"SESSION\",\r\n    code: \"<pre>$memNo = \\\\Session::get('member.memNo');</pre>\",\r\n    content: \"로그인한 회원 정보는 SESSION에 있다. 로그인한 회원 정보를 사용할 때는 session에서 가져다 쓰자.\",\r\n    regDt: \"2022.04.05\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"로그로 데이터 확인\",\r\n    code: \"<pre>$dbkLog = \\\\App::load('\\\\Component\\\\Dbk\\\\DbkLog');\\n$logData = [];;\\n$logData['arrData'] = $arrData;;\\n//DbkLog 테이블에 내용이 insert된다.;\\n$dbkLog->setInsertLog('setInsertLike',$logData);;\\nunset($dbkLog, $logData);</pre>\",\r\n    content: \"DbkLog Component  파일의 setInsertLog함수에서 log값을 db에 저장한다.\",\r\n    regDt: \"2022.04.05\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"trigger()\",\r\n    code: \"<pre>$('#testspan').trigger('click');\\n$('.order-buy').trigger('click');</pre>\",\r\n    content: \"이벤트 실행 없이 무조건 실행되게 함.(이벤트 핸들러 없이도 실행되게)\",\r\n    regDt: \"2022.04.06\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"get: url로 넘긴 데이터 가져오기\",\r\n    code: \"<pre>$bdId = Request::get()->get('bdId'); \\n if($bdId === 'recipe') {...}</pre>\",\r\n    content: \"해당 url에서만 동작하도록 함. 다른 페이지에서 이 컨트롤러를 자주 사용하게 될 경우 if문은 사용해 bdId 별로 구분해서 동작하게 할 수 있음\",\r\n    regDt: \"2022.04.06\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"고도몰 공통 코드\",\r\n    code: \"<pre>gd_select_box('areaNm', 'areaNm', gd_array_change_key_value(gd_code('90001')), \\n null, $dbkMainFilter['areaNm'], '선택해주세요');</pre>\",\r\n    content: \"텍스트로 selectbox 만들기, 코드 관리는 es_code애서 관리함\",\r\n    regDt: \"2022.04.07\"\r\n},\r\n{\r\n    type: \"work\",\r\n    key:\"고도몰\",\r\n    title: \"타임세일\",\r\n    code: \"<pre>'SELECT sno FROM es_timeSale WHERE delFl = 'n' AND dbkMainFl = 'y' \\nAND startDt <= now() AND endDt >= now() ORDER BY sno DESC LIMIT 0,1'</pre>\",\r\n    content: \"타임세일 기획전 중, 메인으로 지정된 것이면서 진행 중이고, 그 중 가장 최신인 게시글을 결과로 도출한다. sql로 조건을 걸어 해결 가능했다.\",\r\n    regDt: \"2022.04.08\"\r\n},\r\n{\r\n    type: \"error\",\r\n    key:\"고도몰\",\r\n    title: \"선물하기\",\r\n    code: \"<pre></pre>\",\r\n    content: \"order.html파일의 내용과 같은데 order_gift.html파일에서는 배송지 목록 추가 기능이 동작하지 않는 오류가 있었다. body태그 바로 안쪽에 있는 태그들 중 id='popupShipping'인 태그가 order_gift에서 실행할 때 포함되지 않고 있는 것을 발견했다. outline/header/_header.html 파일에서 body태그를 발견했고 order조건만 있는 것을 발견하고 order_gift일 때의 조건도 추가했다.\",\r\n    regDt: \"2022.04.08\"\r\n},\r\n{\r\n    type: \"error\",\r\n    key:\"고도몰\",\r\n    title: \"전화번호 검색 필터\",\r\n    code: \"<pre>if ($this->search['key'] && $this->search['keyword']) {\\n\tif($this->search['key'] == 'areaNm' || $this->search['key'] == 'shopNm') {\\n\t\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n\t}\\n    }\\nif ($this->search['key'] == 'contact'){\\n\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n}\\n</pre>\",\r\n    content: \"이슈: 전화번호로 0을 검색했을 때 모든 연락처 리스트가 나오는 결과가 있었다. $this->search['keyword']의 값이 0인 경우 해당 if문 안에 들어가지 않았다. 0을 false로 인식했기 때문이다. 그래서 contact부분만 if문 밖으로 따로 빼주었다.\",\r\n    regDt: \"2022.04.13\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"Controller에서 페이지 redirect\",\r\n    code: \"<pre>$this->redirect('/goods/goods_view.php?goodsNo=' . Request::get()->get('goodsNo'));</pre>\",\r\n    content: \"\",\r\n    regDt: \"2022.04.14\"\r\n},\r\n{\r\n    type: \"tip\",\r\n    key:\"고도몰\",\r\n    title: \"CommonController\",\r\n    code: \"<pre>if ($this->search['key'] && $this->search['keyword']) {\\n\tif($this->search['key'] == 'areaNm' || $this->search['key'] == 'shopNm') {\\n\t\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n\t}\\n    }\\nif ($this->search['key'] == 'contact'){\\n\t$this->arrWhere[] = 'c.' . $this->search['key'] . ' LIKE concat(\\\\'%\\\\',?,\\\\'%\\\\') ';\\n\t$this->db->bind_param_push($this->arrBind, 's', $this->search['keyword']);\\n}\\n</pre>\",\r\n    content: \"전제 페이지에서 사용할 수 있는 Controller\\nstand.html은 컨트롤러가 없음 그래서 CommonController를 사용해서 데이터를 가져와서 써야함\",\r\n    regDt: \"2022.04.14\"\r\n},\r\n{\r\n    type: \"dev\",\r\n    key:\"파이썬\",\r\n    title: \"MemoCode 코딩 메뉴 추가\",\r\n    code: \"<pre>#한줄씩 문장을 읽어들여 '\\\\n'문자로 연결하기\\ndef delEnter():\\n    texts = str(text.get(1.0, END))\\n    tList = texts.split('\\\\n')\\n    vText = ''\\n    for t in tList:\\n        if t == '':\\n            break;\\n        vText += t+'\\\\\\\\n'\\n    text.delete(1.0, END)\\n    text.insert(INSERT, vText)\\n    \\n#'\\\\'를 '\\\\\\\\'로 변환\\ndef delWord():\\n    texts = str(text.get(1.0, END))\\n    texts = texts.replace('\\\\\\\\','\\\\\\\\\\\\\\\\')\\n    text.delete(1.0, END)\\n    text.insert(INSERT, texts)\\n</pre>\",\r\n    content: \"<pre></pre>태그 사이에 줄바꿈이 있는 긴 코드를 넣어야할 때 일일이 엔터를 '\\\\n'문자로 수정하고 '\\\\'문자를 '\\\\\\\\'로 수정하는 것은 번거롭고 비효율적이었다. 그래서 이전에 과제로 만들었던 파이썬 메모장에 다음의 기능을 추가해 해결했다. <br/>> 1. 엔터키를 '\\\\n'문자로 변환&nbsp;2.'\\\\'문자를'\\\\\\\\'문자로 변환 &nbsp; 프로그래밍 언어를 아니까 필요할 때 프로그램을 직접 만들어서 사용할 수 있다는 게 좋은 것 같다.\",\r\n    regDt: \"2022.04.16\"\r\n}];\r\n"]},"metadata":{},"sourceType":"module"}